using System;
using System.Collections.Generic;
using UnityEngine;

public class VulnerabilityDatabase
{
    private List<Vulnerability> knownVulnerabilities = new List<Vulnerability>();
    
    public VulnerabilityDatabase()
    {
        // Initialize with some common vulnerabilities
        
        // Apache vulnerabilities
        knownVulnerabilities.Add(new Vulnerability(
            "CVE-2021-41773", "Path Traversal in Apache HTTP Server",
            VulnerabilityType.RemoteCodeExecution, 9,
            "A flaw in path normalization in Apache HTTP Server 2.4.49 allows an attacker to access files outside the document root.",
            "2.4.49", "2.4.49", "exploit-cve-2021-41773 {host} {port}"
        ));
        
        // MySQL vulnerabilities
        knownVulnerabilities.Add(new Vulnerability(
            "CVE-2016-6662", "MySQL Remote Code Execution",
            VulnerabilityType.RemoteCodeExecution, 8,
            "Vulnerability in MySQL allows attackers to execute arbitrary code via crafted CREATE TABLE.",
            "5.5.0", "5.7.14", "mysql-exploit {host} {port}"
        ));
        
        // Linux system vulnerabilities
        knownVulnerabilities.Add(new Vulnerability(
            "CVE-2021-3156", "Sudo Baron Samedit",
            VulnerabilityType.PrivilegeEscalation, 8,
            "Heap-based buffer overflow in Sudo allows local privilege escalation.",
            "1.8.2", "1.8.31", "sudo -u#-1 /bin/bash"
        ));
        
        // OpenSSL vulnerabilities
        knownVulnerabilities.Add(new Vulnerability(
            "CVE-2014-0160", "Heartbleed",
            VulnerabilityType.BufferOverflow, 9,
            "Memory leak in OpenSSL that allows stealing information from the process memory.",
            "1.0.1", "1.0.1f", "heartbleed -p {port} {host}"
        ));
        
        // Samba vulnerabilities
        knownVulnerabilities.Add(new Vulnerability(
            "CVE-2017-7494", "SambaCry",
            VulnerabilityType.RemoteCodeExecution, 9,
            "Remote code execution vulnerability in Samba that allows attackers to upload and execute code.",
            "3.5.0", "4.5.10", "sambaexploit {host} {port}"
        ));
        
        // WordPress vulnerabilities
        knownVulnerabilities.Add(new Vulnerability(
            "CVE-2019-8942", "WordPress Image Remote Code Execution",
            VulnerabilityType.RemoteCodeExecution, 7,
            "Vulnerability in WordPress allows attackers to execute arbitrary code via crafted image files.",
            "3.7.0", "5.0.0", "wp-exploit {host} {port}"
        ));
        
        // SSH vulnerabilities
        knownVulnerabilities.Add(new Vulnerability(
            "CVE-2016-0777", "OpenSSH Client Information Leak",
            VulnerabilityType.Authentication, 6,
            "Information disclosure vulnerability in OpenSSH client that can leak private keys.",
            "5.4", "7.1p1", "ssh-leak {host} {port}"
        ));
    }
    
    public Vulnerability GetRandomVulnerabilityFor(Software software)
    {
        // Get all vulnerabilities that could affect this software
        List<Vulnerability> applicableVulns = new List<Vulnerability>();
        foreach (var vuln in knownVulnerabilities)
        {
            if (vuln.AffectsSoftware(software))
            {
                applicableVulns.Add(vuln);
            }
        }
        
        if (applicableVulns.Count == 0)
            return null;
            
        // Return a random vulnerability
        return applicableVulns[UnityEngine.Random.Range(0, applicableVulns.Count)];
    }
}
